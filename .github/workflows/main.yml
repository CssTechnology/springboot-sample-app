name: Dev Branch Pipeline

on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ vars.JF_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}

      - name: Set CLI Config
        run: jf pip-config --global=true --repo-resolve=dempappsdk-pypi

      - name: Install Dependencies via JFrog CLI
        run: jf pip install .

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build Wheels
        run: |
          python -m pip install build
          python -m build --wheel
          ls -l dist/

      - name: Publish Wheels to Artifactory
        run: jf rt upload dist/ dempappsdk-pypi/

      - name: Publish Build Info With JFrog CLIs
        run: |
          # Collect environment variables for the build
          jf rt build-collect-env
          # Collect VCS details from git and add them to the build
          jf rt build-add-git
          # Publish build info
          jf rt build-publish
